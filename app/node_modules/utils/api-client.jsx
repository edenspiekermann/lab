"use strict";
var axios = require('axios');

function ApiClient(user, SERVER_ENV) {
  user = user || {};
  SERVER_ENV = SERVER_ENV || {};

  return {
    getProjects(state) {
      return request('get', 'projects/', state.query);
    },
    getUserProjects(state) {
      return request('get', 'users/' + state.params.user + '/projects', state.query);
    },
    getProject(state) {
      return request('get', 'projects/' + state.params.project);
    },
    getFollowers(state) {
      return request('get', 'projects/' + state.params.project + '/followers');
    },
    getLegalStatuses() {
      return request('get', 'legal_statuses');
    },
    getStages() {
      return request('get', 'stages');
    },
    getUser(state) {
      return request('get', 'users/' + state.params.user);
    },
    getUserProfile(state) {
      return request('get', 'users/' + state.params.user + '/profile');
    },
    getMyProfile() {
      return request('get', 'users/' + user.id + '/profile');
    },
    getContactTypes() {
      return request('get', 'contact_types');
    },
    getSelfDefinitions() {
      return request('get', 'self_definitions');
    },
    getSkills() {
      return request('get', 'skills');
    },
    getSectors(state) {
      return request('get', 'sectors', state.query);
    },
    getActivities(state) {
      return request('get', 'projects/' + state.params.project + '/activities');
    },
    getActivity(state) {
      return request('get', 'projects/' + state.params.project + '/activities/' + state.params.activity);
    },
    getEvents(state) {
      return request('get', 'projects/' + state.params.project + '/events');
    },
    getEvent(state) {
      return request('get', 'projects/' + state.params.project + '/events/' + state.params.event);
    },
    getNeeds(state) {
      return request('get', 'projects/' + state.params.project + '/needs');
    },
    getNeed(state) {
      return request('get', 'projects/' + state.params.project + '/needs/' + state.params.need);
    },
    getCountries() {
      return request('get', 'countries');
    },
    getContributions(state) {
      return request('get', 'projects/' + state.params.project + '/needs/' + state.params.need + '/contributions');
    },
    getUserContributions() {
      return request('get', 'users/' + user.id + '/contributions');
    },
    getArticles(state) {
      return request('get', 'articles/', state.query);
    },
    getArticle(state) {
      return request('get', 'articles/' + state.params.article, state.query);
    },

    createUser(data) {
      return request('post', 'users', data);
    },
    createSession(data) {
      return request('post', 'sessions', data);
    },
    deleteSession() {
      return request('delete', 'sessions');
    },

    requestPassword(data) {
      return request('post', 'users/reset_passwords', data);
    },
    resetPassword(data) {
      return request('put', 'users/reset_passwords', data);
    }
  };

  function request(method, url, data) {
    var config = {
      url: process.env.API_URL + url,
      method: method,
      headers: {
        'App-Id': SERVER_ENV.APP_ID,
        'App-Token': SERVER_ENV.APP_TOKEN,
        'Accept': 'application/json'
      }
    };

    if (user.email && user.token) {
      config.headers['User-Email'] = user.email;
      config.headers['User-Token'] = user.token;
    }

    if (method === 'get') {
      config.params = data;
    } else {
      config.data = data;
    }

    return axios(config)
      .then(response => {
        var result = response.data.data || {};
        result._request = response;
        result._meta = response.data.meta;
        delete result._request.data;
        return result;
      })
      .catch(response => {
        var message = ' '+response.data.meta.errors
              .map(error => error.message)
              .join(', ');
        throw new Error(response.status + message);
      });
  }
}

module.exports = ApiClient;
